---
import '@/styles/globals.css';

import { Toaster } from '@/components/ui/sonner';
import { ViewTransitions } from 'astro:transitions';
import Metadata from '@/components/Metadata.astro';
import { Header } from '@/components/Header';

const metadata = {};

const { props } = Astro;
---

<html lang="en" dir="ltr" class="2xl:text-[20px] dark">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />

    <Metadata {...{ ...metadata, ...props }} />

    <!-- Uncomment line below to activate View Transitions -->
    <!-- <ViewTransitions fallback="swap" /> -->

    <ViewTransitions fallback="animate" />
  </head>

  <body>
    <Header client:load />

    <slot />

    <style is:global>
      img {
        content-visibility: auto;
      }
    </style>

    <script is:inline>
      const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      };
      const isDark = getThemePreference() === 'dark';
      document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

      if (typeof localStorage !== 'undefined') {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains('dark');
          localStorage.setItem('theme', isDark ? 'dark' : 'light');
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ['class'],
        });
      }
    </script>

    <Toaster />
  </body>
</html>
